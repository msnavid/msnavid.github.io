Anova(lmerModel, type = 3)
summary(lmerModel)
lmerTest::ranova(lmerModel)
lmerModel2 <- lmerTest::lmer(attitude ~ drink*imagery + (1|participant), data = longAttitude)
anova(lmerModel2)
lmerModel2 <- lmerTest::lmer(attitude ~ drink*imagery + (1|participant) + (1|drink) + (1|imagery), data = longAttitude)
lmerModel2 <- lmerTest::lmer(attitude ~ drink*imagery + (1|drink:imagery), data = longAttitude)
lmerModel2 <- lmerTest::lmer(attitude ~ drink*imagery + (1|drink:imagery), data = longAttitude, REML = FALSE)
anova(lmerModel2)
?confint
aovModel
pairwise.t.test(longAttitude$attitude, longAttitude$groups, paired = TRUE, p.adjust.method = "bonferroni")
?pairwise.table
t <- pairwise.t.test(longAttitude$attitude, longAttitude$groups, paired = TRUE, p.adjust.method = "bonferroni")
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
temmeans <- emmeans::emmeans(analysis, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
install.packages("lsmeans")
install.packages("lsmeans")
install.packages("lsmeans")
longAttitude2 <- longAttitude
constrasts(longAttitude2$drink) <- contr.sum(3)
contrasts(longAttitude2$drink) <- contr.sum(3)
contrasts(longAttitude2$drink)
contrasts(longAttitude2$drink) <- contr.sum(4)
contrasts(longAttitude2$drink) <- contr.sum(2)
contrasts(longAttitude2$drink) <- contr.sum(1)
contrasts(longAttitude2$drink) <- contr.sum(3)
contrasts(longAttitude2$drink)
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
contrasts(longAttitude2$imagery) <- contr.sum(3)
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
AlcoholvsWater<-c(1, 1, -2)
BeervsWine<-c(-1, 1, 0)
contrasts(longAttitude$drink)<-cbind(AlcoholvsWater, BeervsWine)
contrasts(longAttitude2$drink)
contrasts(longAttitude$drink)
NegativevsOther<-c(1, -2, 1)
PositivevsNeutral<-c(-1, 0, 1)
contrasts(longAttitude$imagery)<-cbind(NegativevsOther, PositivevsNeutral)
contrasts(longAttitude$imagery)
contrasts(longAttitude2$imagery)
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
contrasts(longAttitude$imagery) <- contr.sum(3)
contrasts(longAttitude$drink) <- contr.sum(3)
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink*imagery, type = 'response', adjust = 'Tukey')
?emmeans
temmeans <- emmeans::emmeans(aovModel, specs = 'drink', type = 'response', adjust = 'Tukey')
temmeans <- emmeans::emmeans(aovModel, specs = 'drink')
lmeModel
lmeModel <- lme (attitude ~ drink*imagery, random = ~1|participant/drink/imagery, data = longAttitude)
library(nlme)
lmeModel <- lme (attitude ~ drink*imagery, random = ~1|participant/drink/imagery, data = longAttitude)
lmeModel <- lme (attitude ~ drink*imagery, random = ~1|participant, data = longAttitude)
lmeModel <- lme (attitude ~ drink*imagery, random = ~1|participant/drink/imagery, data = longAttitude)
lmeModel2 <- lme (attitude ~ drink*imagery, random = ~1|participant, data = longAttitude)
anova(lmeModel, lmeModel2)
install.packages("userfriendlyscience")
MTcars <- mtcars
mtcars
mtcars <- mtcars
View(MTcars)
View(MTcars)
View(mtcars)
dat <- mtcars[, c('am','drat','wt')];
View(dat)
names(dat) <- c('factor','t0_dependentVar','t1_dependentVar');
dat$factor <- factor(dat$factor);
fanova(dat, y=c('t0_dependentVar','t1_dependentVar'),between='factor', plot=TRUE);
temmeans <- emmeans::emmeans(aovModel, pairwise ~ drink | imagery)
anova(aovModel)
?emmeans
ezModel <- ezANOVA(data = longAttitude, dv = .(attitude), wid = .(participant), within = .(drink, imagery), type = 3, detailed = TRUE)
library(ez)
contrasts(longAttitude$drink)
contrasts(longAttitude$drink)<-cbind(AlcoholvsWater, BeervsWine)
contrasts(longAttitude$drink)
contrasts(longAttitude$imagery)<-cbind(NegativevsOther, PositivevsNeutral)
contrasts(longAttitude$imagery)
ezModel <- ezANOVA(data = longAttitude, dv = .(attitude), wid = .(participant), within = .(drink, imagery), type = 3, detailed = TRUE)
ezModel
ezModel <- ezANOVA(data = longAttitude, dv = .(attitude), wid = .(participant), within = .(drink, imagery), type = 3, detailed = TRUE, return_aov = TRUE)
x <- ezModel$aov
x
library(emmeans)
temmeans <- emmeans (x, pairwise ~ drink | imagery)
temmeans
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink | imagery, type = 'response', adjust = 'Tukey'), infer = c(TRUE, TRUE))
temmeans
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink | imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink | imagery, type = 'response', adjust = 'Tukey'), infer = c(TRUE, TRUE))
temmeans <- summary (emmeans(ezModel$aov, type = 'response', adjust = 'Tukey'), infer = c(TRUE, TRUE))
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink, type = 'response', adjust = 'Tukey'), infer = c(TRUE, TRUE))
temmeans
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Tukey'), infer = c(TRUE, TRUE))
temmeans
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans
longAttitude <-melt(Attitude, id = "participant", measured = c( "beerpos", "beerneg", "beerneut", "winepos", "wineneg", "wineneut", "waterpos", "waterneg", "waterneut"))
library(reshape2)
longAttitude <-melt(Attitude, id = "participant", measured = c( "beerpos", "beerneg", "beerneut", "winepos", "wineneg", "wineneut", "waterpos", "waterneg", "waterneut"))
longAttitude$drink<-gl(3, 60, labels = c("Beer", "Wine", "Water"))
longAttitude$imagery<-gl(3, 20, 180, labels = c("Positive", "Negative", "Neutral"))
ezModel <- ezANOVA(data = longAttitude, dv = .(attitude), wid = .(participant), within = .(drink, imagery), type = 3, detailed = TRUE, return_aov = TRUE)
View(longAttitude)
View(Attitude)
longAttitude <- melt(Attitude, id = "participant", measured = c( "beerpos", "beerneg", "beerneut", "winepos", "wineneg", "wineneut", "waterpos", "waterneg", "waterneut"))
names(longAttitude) <- c('participant', 'groups', 'attitude')
View(longAttitude)
longAttitude$drink<-gl(3, 60, labels = c("Beer", "Wine", "Water"))
longAttitude$imagery<-gl(3, 20, 180, labels = c("Positive", "Negative", "Neutral"))
ezModel <- ezANOVA(data = longAttitude, dv = .(attitude), wid = .(participant), within = .(drink, imagery), type = 3, detailed = TRUE, return_aov = TRUE)
ezModel
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink | imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans
temmeans2 <- summary (emmeans(ezModel$aov, pairwise ~ drink | imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans2
longAttitude2 <- longAttitude
contrasts(longAttitude$imagery)
contrasts(longAttitude$drink)
contrasts(longAttitude2$drink)<-cbind(AlcoholvsWater, BeervsWine)
contrasts(longAttitude2$imagery)<-cbind(NegativevsOther, PositivevsNeutral)
contrasts(longAttitude2$drink)
ezModel2 <- ezANOVA(data = longAttitude2, dv = .(attitude), wid = .(participant), within = .(drink, imagery), type = 3, detailed = TRUE, return_aov = TRUE)
temmeans2 <- summary (emmeans(ezModel2$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans <- summary (emmeans(ezModel$aov, pairwise ~ drink * imagery, type = 'response', adjust = 'Bonferroni'), infer = c(TRUE, TRUE))
temmeans
temmeans2
pairwise.t.test(longAttitude$attitude, longAttitude$groups, paired = TRUE, p.adjust.method = "bonferroni")
pairwise.t.test(longAttitude2$attitude, longAttitude$groups, paired = TRUE, p.adjust.method = "bonferroni")
pairwise.t.test(longAttitude2$attitude, longAttitude2$groups, paired = TRUE, p.adjust.method = "bonferroni")
libraray(multcomp)
library(multcomp)
?multcomp::adjusted()
install.packages("TukeyC")
t <- TukeyC::TukeyC(ezModel$aov)
t <- TukeyC::TukeyC(aovModel)
library(TukeyC)
t <- TukeyC(ezModel$aov, which = 'drink')
t
t <- TukeyC(ezModel$aov, which = 'drink:imagery')
t
t <- TukeyC(ezModel$aov, which = 'drink*imagery')
t <- TukeyC(ezModel$aov, which = 'imagery', adjusted.pvalue = 'bonferroni')
t
print.TukeyC(t)
?Ftest()
anova(lmeModel, type = "marginal")
anova(lmeModel2, type = "marginal")
library(readxl)
Book1 <- read_excel("Desktop/Book1.xlsx",
col_types = c("date", "numeric", "text",
"date", "date", "date", "date", "date",
"date", "date", "date"))
View(Book1)
x <- Book1$Maghrib-Book1$Fajr
x <- as.POSIXct(strptime(Book1$Fajr,"%Y.%M.%D %H:%M:%S"))
x <- as.POSIXct(strptime(Book1$Fajr,"%Y-%M-%D %H:%M:%S"))
?as.POSIXct
x <- as.POSIXct(strptime(Book1$Fajr,"%Y-%m %T"))
x <- as.POSIXct(strptime(Book1$Fajr,"%Y-%m-%d %T"))
Fajr <- as.POSIXct(strptime(Book1$Fajr,"%Y-%m-%d %T"))
Book1$Fajr <- as.POSIXct(strptime(Book1$Fajr,"%Y-%m-%d %T"))
Book1$Maghrib <- as.POSIXct(strptime(Book1$Maghrib,"%Y-%m-%d %T"))
Book1$Maghrib_Mecca <- as.POSIXct(strptime(Book1$Maghrib_Mecca,"%Y-%m-%d %T"))
Book1$Fajr_Mecca <- as.POSIXct(strptime(Book1$Fajr_Mecca,"%Y-%m-%d %T"))
?difftime
x <- difftime(Book1$Maghrib-Book1$Fajr)
x <- difftime(Book1$Maghrib-Book1$Fajr, format = "%Y-%m-%d %T")
x <- as.difftime(Book1$Maghrib-Book1$Fajr, format = "%Y-%m-%d %T")
x <- as.difftime(Book1$Maghrib-Book1$Fajr)
x <- as.difftime(Book1$Asr-Book1$Sunrise)
packageVersion('emmeans')
data("PlantGrowth")
force(PlantGrowth)
View(PlantGrowth)
PlantGrowth %>% sample_n_by(group, size = 2)
library(readr)
library(reshape2)
library(ggplot2)
library(wesanderson)
library(cowplot)
library(tidyverse)
library(pairwise)
PlantGrowth %>% sample_n_by(group, size = 2)
PlantGrowth %>% sample_n_by(group, size = 2)
library(ggpubr)
library(rstatix)
library(ggpubr)
library(rstatix)
PlantGrowth %>% sample_n_by(group, size = 2)
installed.packages('rstatix')
install.packages("rstatix")
library(tidyverse)
library(ggpubr)
library(rstatix)
install.packages("rstatix")
install.packages("rstatix")
install.packages(c("afex", "agricolae", "AlgDesign", "arm", "backports", "bayesplot", "bayestestR", "BH", "boot", "broom", "cAIC4", "callr", "car", "carData", "checkmate", "class", "classInt", "cli", "coin", "crosstalk", "cubature", "curl", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "devtools", "DiagrammeR", "digest", "dplyr", "e1071", "effects", "ellipsis", "emmeans", "fansi", "farver", "fBasics", "fitdistrplus", "flextable", "forcats", "forecast", "fracdiff", "fs", "gdtools", "GGally", "ggeffects", "ggforce", "ggiraph", "ggplot2", "ggpubr", "ggrepel", "ggridges", "ggsignif", "gh", "git2r", "glmmTMB", "glue", "greybox", "gsl", "gss", "gtools", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "jsonlite", "jtools", "KernSmooth", "klaR", "knitr", "labelled", "lamW", "later", "lattice", "lavaan", "leaps", "lemon", "libcoin", "lme4", "lmerTest", "lubridate", "manipulateWidget", "maptools", "markdown", "MASS", "Matrix", "matrixStats", "MBESS", "mgcv", "mime", "modelr", "modeltools", "multcomp", "multcompView", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "officer", "OpenMx", "openssl", "openxlsx", "optimx", "performance", "photobiologyWavebands", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "processx", "promises", "ps", "psych", "purrr", "pwr", "qqplotr", "quadprog", "quantmod", "quantreg", "questionr", "R6", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "remotes", "reshape2", "rgexf", "rgl", "rJava", "rlang", "rmarkdown", "robustbase", "roxygen2", "rpf", "rsq", "rstudioapi", "rvest", "scales", "SCRT", "selectr", "sem", "semTools", "sf", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "smooth", "sp", "SparseM", "spatial", "spData", "spdep", "StanHeaders", "stringdist", "stringi", "SuppDists", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "timeSeries", "tinytex", "TMB", "TTR", "ufs", "units", "uroot", "usethis", "uuid", "vctrs", "visNetwork", "webshot", "whisker", "withr", "xfun", "xlsx", "xml2", "xts", "yaml", "zip", "zoo"))
library(ggplot2)
library(readr)
A2320_Control_1 <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_1.CSV")
View(A2320_Control_1)
library(readr)
A2320_Control_1 <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_1.CSV",
col_names = FALSE)
View(A2320_Control_1)
library(readr)
A2320_Control <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control.csv",
col_names = FALSE)
View(A2320_Control)
View(A2320_Control_1)
library(readr)
A2320_Control <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control.csv",
col_names = FALSE)
View(A2320_Control)
library(readr)
A2320_Control2 <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control.csv",
col_names = FALSE)
View(A2320_Control2)
library(readr)
A2320_Control <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control.csv",
col_names = FALSE)
View(A2320_Control)
library(readr)
A2320_Control_1 <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_1.CSV",
col_names = FALSE)
View(A2320_Control_1)
library(readr)
A2320_Control_2 <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_2.CSV",
col_names = FALSE)
View(A2320_Control_2)
library(readr)
A2320_Control_3 <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_3.CSV",
col_names = FALSE)
View(A2320_Control_3)
library(readr)
A2320_Control_1a <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_1.csv",
col_names = FALSE)
View(A2320_Control_1a)
library(readr)
A2320_Control_2a <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_2.csv",
col_names = FALSE)
View(A2320_Control_2a)
library(readr)
A2320_Control_3a <- read_csv("Samran/SynologyDrive/SynologyDrive/OneDrive - Aalborg Universitet/My Projects/UpWork/Rajasekaran Yogarajah/heka-exporter/A2320 Control_3.csv",
col_names = FALSE)
View(A2320_Control_3a)
View(A2320_Control2)
View(A2320_Control_3a)
View(A2320_Control_3a)
View(A2320_Control_3)
View(A2320_Control_3)
install.packages("gganimate")
x = seq(0,10,0.1)
y = -x;
?rep
x = seq(0,10,0.1)
y = -x
intervention <- rep('Chiro', nrow(x))
intervention <- rep('Chiro', length.out = nrow(x))
nrow(x)
length(x)
intervention <- rep('Chiro', length(x))
session <- rep('Pre', length(x))
chiro.data <- data.frame(intervention, session, x, y)
intervention <- rep('Ctrl', length(x))
session <- rep('Pre', length(x))
ctrl.data <- data.frame(intervention, session, x, y)
data_ <- rbind(chiro.data, ctrl.data)
View(data_)
# post data
x = seq(10,20,0.1)
library(ggplot2)
library(gganimate)
library(ggplot2)
library(gganimate)
x1 = seq(0,10,0.1)
y1 = -x1
intervention <- rep('Ctrl', length(x))
session <- rep('Pre', length(x))
ctrl.data <- data.frame(intervention, session, x, y)
intervention <- rep('Chiro', length(x))
session <- rep('Pre', length(x))
chiro.data <- data.frame(intervention, session, x, y)
data1 <- rbind(ctrl.data, chiro.data)
# post data
x2 = seq(10,20,0.1)
x1 = seq(0,10,0.1)
y1 = -x1
intervention <- rep('Ctrl', length(x1))
session <- rep('Pre', length(x1))
ctrl.data <- data.frame(intervention, session, x1, y1)
intervention <- rep('Chiro', length(x1))
session <- rep('Pre', length(x1))
chiro.data <- data.frame(intervention, session, x1, y1)
data1 <- rbind(ctrl.data, chiro.data)
# post data
x2 = seq(10,20,0.1)
y2 = -x2
intervention <- rep('Ctrl', length(x2))
session <- rep('Post', length(x2))
ctrl.data <- data.frame(intervention, session, x2, y2)
y2 = -x1
intervention <- rep('Chiro', length(x2))
session <- rep('Post', length(x2))
chiro.data <- data.frame(intervention, session, x2, y2)
data2 <- rbind(ctrl.data, chiro.data)
#
data_ <- rbind (data1, data2)
data1$x <- data1$x1
data1$y <- data1$y1
data1$x1 <- NULL
data1$y1 <- NULL
data2$x <- data1$x2
data2$y <- data1$y2
data2$x2 <- NULL
data2$y2 <- NULL
#
data_ <- rbind (data1, data2)
# post data
x2 = seq(10,20,0.1)
y2 = -x2
intervention <- rep('Ctrl', length(x2))
session <- rep('Post', length(x2))
ctrl.data <- data.frame(intervention, session, x2, y2)
y2 = -x1
intervention <- rep('Chiro', length(x2))
session <- rep('Post', length(x2))
chiro.data <- data.frame(intervention, session, x2, y2)
data2 <- rbind(ctrl.data, chiro.data)
data2$x <- data1$x2
data2$y <- data1$y2
data2$x2 <- NULL
data2$y2 <- NULL
y2 = -x2
# post data
x2 = seq(10,20,0.1)
y2 = -x2
intervention <- rep('Ctrl', length(x2))
session <- rep('Post', length(x2))
ctrl.data <- data.frame(intervention, session, x2, y2)
y2 = -x1
intervention <- rep('Chiro', length(x2))
session <- rep('Post', length(x2))
chiro.data <- data.frame(intervention, session, x2, y2)
data2 <- rbind(ctrl.data, chiro.data)
data2$x <- data2$x2
data2$y <- data2$y2
data2$x2 <- NULL
data2$y2 <- NULL
#
data_ <- rbind (data1, data2)
# plot
p <- ggplot (data2, aes(x, y, group = intervenion, color = session)) +
geom_line()
p
# plot
p <- ggplot (data2, aes(x, y, group = intervention, color = session)) +
geom_line()
p
View(data_)
x1 = seq(0,5,1)
y1 = -x1
intervention <- rep('Ctrl', length(x1))
session <- rep('Pre', length(x1))
ctrl.data <- data.frame(intervention, session, x1, y1)
intervention <- rep('Chiro', length(x1))
session <- rep('Pre', length(x1))
chiro.data <- data.frame(intervention, session, x1, y1)
data1 <- rbind(ctrl.data, chiro.data)
data1$x <- data1$x1
data1$y <- data1$y1
data1$x1 <- NULL
data1$y1 <- NULL
# post data
x2 = seq(10,20,0.1)
y2 = -x2
intervention <- rep('Ctrl', length(x2))
session <- rep('Post', length(x2))
ctrl.data <- data.frame(intervention, session, x2, y2)
y2 = -x1
intervention <- rep('Chiro', length(x2))
session <- rep('Post', length(x2))
chiro.data <- data.frame(intervention, session, x2, y2)
data2 <- rbind(ctrl.data, chiro.data)
data2$x <- data2$x2
data2$y <- data2$y2
data2$x2 <- NULL
data2$y2 <- NULL
#
data_ <- rbind (data1, data2)
# plot
p <- ggplot (data2, aes(x, y, group = intervention, color = session)) +
geom_line()
p
x1 = seq(0,5,1)
y1 = -x1
intervention <- rep('Ctrl', length(x1))
session <- rep('Pre', length(x1))
ctrl.data <- data.frame(intervention, session, x1, y1)
intervention <- rep('Chiro', length(x1))
session <- rep('Pre', length(x1))
chiro.data <- data.frame(intervention, session, x1, y1)
data1 <- rbind(ctrl.data, chiro.data)
data1$x <- data1$x1
data1$y <- data1$y1
data1$x1 <- NULL
data1$y1 <- NULL
# post data
x2 = seq(10,20,0.1)
y2 = -x2
intervention <- rep('Ctrl', length(x2))
session <- rep('Post', length(x2))
ctrl.data <- data.frame(intervention, session, x2, y2)
y2 = -x1
intervention <- rep('Chiro', length(x2))
session <- rep('Post', length(x2))
chiro.data <- data.frame(intervention, session, x2, y2)
# post data
x2 = seq(5,10,1)
y2 = -x2
intervention <- rep('Ctrl', length(x2))
session <- rep('Post', length(x2))
ctrl.data <- data.frame(intervention, session, x2, y2)
y2 = -x1
intervention <- rep('Chiro', length(x2))
session <- rep('Post', length(x2))
chiro.data <- data.frame(intervention, session, x2, y2)
data2 <- rbind(ctrl.data, chiro.data)
data2$x <- data2$x2
data2$y <- data2$y2
data2$x2 <- NULL
data2$y2 <- NULL
#
data_ <- rbind (data1, data2)
# plot
p <- ggplot (data2, aes(x, y, group = intervention, color = session)) +
geom_line()
p
# plot
p <- ggplot (data_, aes(x, y, group = intervention, color = session)) +
geom_line()
p
# plot
p <- ggplot (data_, aes(x, y, color = intervention)) +
geom_line()
p
library(gganimate)
p + transition_reveal(x)
install.packages("gifski")
install.packages("av")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(cowplot)
# library(tidyr)
source("summarySE.R")
source("R_rainclouds.R")
R.version.string
version
round(1.5)
devtools::install_github("nstrayer/datadrivencv")
devtools::install_github("nstrayer/datadrivencv")
devtools::install_github("nstrayer/datadrivencv")
install.packages("ICON")
devtools::install_github("nstrayer/datadrivencv")
?devtools::install_github()
install.packages("ICON")
?install.packages
install.packages("ICON", dependencies = TRUE)
devtools::install_github("nstrayer/datadrivencv")
devtools::install_github("rrrlw/ICON")
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
install.packages(c("apaTables", "arm", "av", "backports", "bayesplot", "bayestestR", "BH", "boot", "brio", "broom", "car", "class", "classInt", "cli", "clipr", "cluster", "coda", "codetools", "corrr", "covr", "cowplot", "crayon", "crosstalk", "data.table", "data.tree", "DBI", "dbplyr", "deldir", "dendextend", "desc", "devtools", "diffobj", "dplyr", "DT", "e1071", "effects", "emmeans", "expm", "fansi", "farver", "fastmap", "fitdistrplus", "flextable", "forcats", "foreach", "forecast", "Formula", "fs", "gdtools", "GGally", "gganimate", "ggeffects", "ggforce", "ggiraphExtra", "ggplot2", "ggrepel", "ggridges", "ggsignif", "gh", "gifski", "git2r", "gplots", "greybox", "gsl", "gss", "here", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "insight", "isoband", "iterators", "jtools", "kableExtra", "KernSmooth", "labelled", "lamW", "lavaan", "libcoin", "lifecycle", "lme4", "lmerTest", "lmtest", "lsei", "lubridate", "maptools", "margins", "MASS", "MatrixModels", "matrixStats", "MBESS", "memoise", "mime", "mnormt", "moonBook", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "npsurv", "officer", "OpenMx", "openssl", "openxlsx", "pairwise", "parameters", "pbkrtest", "performance", "pillar", "pkgload", "pracma", "promises", "ps", "psych", "quantmod", "quantreg", "questionr", "R.methodsS3", "R.oo", "R.utils", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "readr", "remotes", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "robustbase", "robustlmm", "rpf", "rsq", "rstatix", "rvest", "sandwich", "sem", "semTools", "seriation", "servr", "sf", "shiny", "sjlabelled", "sjmisc", "sjstats", "smooth", "sp", "SparseM", "spatial", "spdep", "splus2R", "StanHeaders", "statmod", "stringdist", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "TMB", "tseries", "TTR", "ufs", "units", "uroot", "usethis", "waldo", "withr", "xlsx", "XML", "xts", "zip", "ztable"))
devtools::install_github("nstrayer/datadrivencv")
install.packages(c("av", "classInt", "cluster", "deldir", "expm", "forecast", "gdtools", "ggrepel", "gsl", "gss", "hexbin", "Hmisc", "igraph", "KernSmooth", "libcoin", "lmtest", "lsei", "mnormt", "mvtnorm", "nlme", "nloptr", "OpenMx", "RcppArmadillo", "RcppEigen", "rJava", "robustbase", "robustlmm", "rpf", "sem", "seriation", "sf", "smooth", "SparseM", "spdep", "statmod", "stringdist", "systemfonts", "TMB", "tseries", "units", "xlsx"))
devtools::install_github("nstrayer/datadrivencv")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("nstrayer/datadrivencv")
install.packages("icon")
install.packages("ICON")
install.packages("R.utils")
install.packages("ICON")
remotes::install_github('mitchelloharawild/icons@v0.1.0')
devtools::install_github("nstrayer/datadrivencv")
?datadrivencv::use_datadriven_cv
setwd("~/Samran/website_msnavid/msnavid.github.io/CV")
library(datadrivencv)
use_datadriven_cv(
full_name = "M Samran Navid",
data_location = "https://docs.google.com/spreadsheets/d/1JgYJPPIzySyxy-wj-C1hYkiYu8qPouSJm9K3RJxw-l0",
pdf_location = "/Users/msnavid/Samran/website_msnavid/msnavid.github.io/files/cv/cv_msnavid.pdf",
html_location = "/Users/msnavid/Samran/website_msnavid/msnavid.github.io/_pages/",
source_location = "https://github.com/nstrayer/cv",
open_files = FALSE
)
source('render_cv.r')
source('render_cv.r')
source('render_cv.r')
